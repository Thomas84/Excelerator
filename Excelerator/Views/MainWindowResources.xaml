<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:Gensler.Revit.Excelerator.Views">

    <!--Grid Styles-->
    <Style x:Key="gridStyle" TargetType="{x:Type Grid}">
        <Setter Property="ShowGridLines" Value="True"/>
    </Style>

    
    <!--RowDefinition Styles-->
    <Style x:Key="rowStyleFixed" TargetType="{x:Type RowDefinition}">
        <Setter Property="Height" Value="50"/>
    </Style>

    <Style x:Key="rowStyleFlex" TargetType="{x:Type RowDefinition}">
        <Setter Property="MinHeight" Value="200"/>
    </Style>


    <!--ColumnDefinition Styles-->
    <Style x:Key="colStyleFlex" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="MinWidth" Value="100"/>
    </Style>

    <Style x:Key="colStyleMinMax" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MaxWidth" Value="200"/>
    </Style>

    <Style x:Key="colStyleFixed" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style x:Key="colStyleSep" TargetType="{x:Type ColumnDefinition}">
        <Setter Property="Width" Value="30"/>
    </Style>


    <!--Button Style-->
    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="btnStyleWide" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="btnStyleFixed" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
    </Style>


    <!--ComboBox Style-->
    <Style x:Key="cmbBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>
    

    <!--Label Style-->
    <Style x:Key="labelStyle" TargetType="{x:Type Label}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    
    <!--TextBlock Style-->
    <Style x:Key="textBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Text" Value="Choose Properties on the left and assign them to Excel columns on the right.  Then press 'Ok' to create a schedule."/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <!--TextBox Style-->
    <Style x:Key="txtBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content=" Excel file..." Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ListView Style-->
    <Style x:Key="WideHeaderText" TargetType="TextBlock">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Width" Value="130"></Setter>
    </Style>
    <Style x:Key="MedHeaderText" TargetType="TextBlock">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Width" Value="65"></Setter>
    </Style>
    <Style x:Key="NarHeaderText" TargetType="TextBlock">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Width" Value="20"></Setter>
    </Style>
    <DataTemplate x:Key="NameHeader">
        <TextBlock Text="Name" Style="{StaticResource WideHeaderText}"/>
    </DataTemplate>
    <DataTemplate x:Key="SheetHeader">
        <TextBlock Text="Sheet" Style="{StaticResource MedHeaderText}"/>
    </DataTemplate>
    <DataTemplate x:Key="RangeHeader">
        <TextBlock Text="Range" Style="{StaticResource MedHeaderText}"/>
    </DataTemplate>
    <DataTemplate x:Key="SelectHeader">
        <TextBlock Text="Sel" Style="{StaticResource NarHeaderText}"/>
    </DataTemplate>
    <DataTemplate x:Key="NameCell">
        <TextBlock Text="{Binding RevitParam.Name}" />
    </DataTemplate>

</ResourceDictionary>
