<Window x:Class="Gensler.Revit.Excelerator.Views.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gensler.Revit.Excelerator.Views"
             mc:Ignorable="d" 
             Height="500" Width="550" MinHeight="500" MinWidth="500"
             Name="ThisWindow">
    <Window.Resources>
        <ResourceDictionary Source="MainWindowResources.xaml"/>
    </Window.Resources>
    <Grid>
        <Grid.Resources>
            <local:MainWindowViewModel x:Key="WindowViewModel"/>
        </Grid.Resources>
        <Grid Name="MasterGrid" Style="{DynamicResource gridStyle}" DataContext="{Binding Source={StaticResource WindowViewModel}}">
            <Grid.RowDefinitions>
                <RowDefinition Style="{DynamicResource rowStyleFixed}"/>
                <RowDefinition Style="{DynamicResource rowStyleFixed}"/>
                <RowDefinition Style="{DynamicResource rowStyleFlex}"/>
                <RowDefinition Style="{DynamicResource rowStyleFixed}"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Style="{DynamicResource gridStyle}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{DynamicResource colStyleFlex}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleFixed}"/>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Style="{DynamicResource txtBoxStyle}" Text="{Binding ExcelPath}" />
                <Button Grid.Column="1" Style="{DynamicResource btnStyle}" Content="File" Command="{Binding FileCommand}"/>
            </Grid>
            <Grid Grid.Row="1" Style="{DynamicResource gridStyle}" IsEnabled="{Binding IsLoaded}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{DynamicResource colStyleMinMax}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleSep}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleFlex}"/>
                </Grid.ColumnDefinitions>
                <ComboBox Grid.Column="0" Name="SelectCat"  Style="{DynamicResource cmbBoxStyle}" ItemsSource="{Binding CategoryItems}" DisplayMemberPath="Name" Text="Category">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectCatCommand}" CommandParameter="{Binding ElementName=SelectCat, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <!--<Rectangle Grid.Column="1" Fill="DarkGray"/>-->
                <!--<Rectangle Grid.Column="2" Fill="DarkGray"/>-->
                <Label Grid.Column="2" Style="{DynamicResource labelStyle}" Content="Mapping"/>
            </Grid>
            <Grid Grid.Row="2" Style="{DynamicResource gridStyle}" IsEnabled="{Binding IsLoaded}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{DynamicResource colStyleMinMax}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleSep}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleFlex}"/>
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0" Name="SelectParam" ItemsSource="{Binding ParameterItems}" DisplayMemberPath="Name"  BorderThickness="0" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectParamCommand}" CommandParameter="{Binding ElementName=SelectParam, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListBox>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Style="{DynamicResource rowStyleFixed}"/>
                        <RowDefinition Style="{DynamicResource rowStyleFixed}"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="1" Style="{DynamicResource btnStyleWide}" Content="&gt;" Command="{Binding AddCommand}"/>
                    <Button Grid.Row="2" Style="{DynamicResource btnStyleWide}" Content="&lt;" Command="{Binding RemoveCommand}"/>
                </Grid>

                <ListView Grid.Column="2" Name="ParameterMap" ItemsSource="{Binding ExcelItems}" BorderThickness="0">
                    <ListView.View>
                        <!--<GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle1}">-->
                        <GridView>
                            <GridView.Columns>
                                <GridViewColumn Header="Name"  Width="130" CellTemplate="{DynamicResource NameCell}" />
                                <GridViewColumn Header="Sheet" Width="65">
                                    <GridViewColumn.DisplayMemberBinding>
                                        <Binding Path="ExcelRange">
                                            <Binding.Converter>
                                                <local:WorksheetConverter></local:WorksheetConverter>
                                            </Binding.Converter>
                                        </Binding>
                                    </GridViewColumn.DisplayMemberBinding>
                                </GridViewColumn>
                                <GridViewColumn Header="Range" Width="65">
                                    <GridViewColumn.DisplayMemberBinding>
                                        <Binding Path="ExcelRange">
                                            <Binding.Converter>
                                                <local:AddressConverter></local:AddressConverter>
                                            </Binding.Converter>
                                        </Binding>
                                    </GridViewColumn.DisplayMemberBinding>
                                </GridViewColumn>
                                <GridViewColumn Header="Sel" Width="30">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource btnStyleFixed}" Command="{Binding EditCommand, Source={StaticResource WindowViewModel}}" IsEnabled="{Binding IsActive}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectExcelCommand}" CommandParameter="{Binding ElementName=ParameterMap, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ListView>
            </Grid>
            <Grid Name="RowGrid" Grid.Row="3" Style="{DynamicResource gridStyle}" IsEnabled="{Binding IsLoaded}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Style="{DynamicResource colStyleFlex}"/>
                    <ColumnDefinition Style="{DynamicResource colStyleFixed}"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Style="{DynamicResource textBlockStyle}" IsEnabled="{Binding ElementName=RowGrid, Path=IsEnabled}"/>
                <Button Grid.Column="1" Style="{DynamicResource btnStyle}" Content="Ok" Command="{Binding RunCommand}" CommandParameter="{Binding ElementName=ThisWindow}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
